<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAfqSURBVHhe7d1LbFVVGAXgQiBIwkAnwgAEBBRiqzyUiIAFeSgRElsgRiBOxZkGmfEwJEaiiSMF
        FZRofEAikRAiiuILdSAjGREcEIMP1EQUBcujreuHU+5msyq9pXvvfz8GX8R1S7v/tU97L733ntNw/xML
        k3fngkdHwDJ4AT6Ew3ACzsKZ6s9HYB+8Do/DWPa5UkPDFGADR8M6+A46oLNO8ncOwVoYzb5GCmgYM2zW
        A/AZtAPb2N6Qz7UbZrKvGTMaxgib0wh7oTff7fX4CCazNcSIhjHBZgyF50Duz9mGuXAeNsMNbE0xoWEs
        sAHz4Fdgm+TDMZjL1hYLGmqH0geCPKLvy/v53pI1rGHrjAENNUPZQ+CLqnxN9sAQtmbNaKgVCh4En1aF
        ayRrG8TWrhUNNUKx/WFHVbRmssb+bAaNaKgRSt1klKzdJjaDRjTUBoXKb+NY0ZqtZbNoQ0NNUGQraHi0
        Xy9Z82I2kyY01AIFjoOTVaEx+htuYbNpQUMNUJz8W//bqsiYHYSBbEYNaKgBSltjlBg7tb8oomFoKEye
        yj1lFBg7mUXlU8o0DA1l7TTKS8VONmtoNAwJRU0D10/phiAzTWMzh0TDkFDSfqO01OxnM4dEw1BQ0HRI
        8bu/i8w2nc0eCg1DQTm7jLJStYvNHgoNQ0AxY0BeacNKS4nMOIZ1EAINQ0ApG42SUreRdRACDX1DIQPg
        F6Og1MmsA1gXvtHQN5Qx3ygnF/NZF77R0DeUsdUqJwdbWRe+0dAnFNEPjhvF5EJm7sc68YmGPqGEKUYp
        uZnCOvGJhj6hhKesUnKyinXiEw19Qgk5/PKnO++zTnyioU8o4UerlJwcY534REMfMLw8+JP37af8u/+r
        kdmHQ7AHgzR0DQPPgZy/823SxRzWlWs0dAmDDoM/q8GLGulkGOvMJRq6hCGfNoYuLreedeYSDV3CkN9Y
        Qxc1X7POXKKhSxjyd2voouY31plLNHQJQ56zhi5qzrLOXKKhSxiyzRq6qGljnblEQ5cwZI5P/PTUcdaZ
        SzR0CUOWB4Hdy+JB4KvW0EXNK6wzl2joEoZcYQ1d1CxnnblEQ5cwpPwmMMb3+7smnQxlnblEQ9cwqMaz
        fIX2OevKNRq6hmHL3cCVVrCuXKOhaxhWTv5w1Bg+d9JFkJNI0NAHDCzn72dl5GgZ68gHGvqCweXs3qyQ
        nOxl3fhCQ18w/I3wg1FGbmR274/8TTT0CQWMh5+qQnIiM49nnfhEQ99QxCyjmFzMZl34RkPfUIa8OTSn
        l4n9BSpOHUfDEFDIdqOg1G1nHYRAwxBQylKrpJQtZR2EQMMQUMpgyOFuQH78D2YdhEDDUFBMDk8Vb2Gz
        h0LDUFDOZKusFAV/R7CJhiGhoANWYSk5wGYOiYYhoaRFVmkpWcRmDomGoaEoOcU6KzBmB9msodEwNJQl
        F4RkJcZsHps1NBpqgMLkOnysyBjtYTNqQEMNUJqcOfS0UWKsZAY1Zwa10VALFLfaKDJWq9lsWtBQC5Qn
        F4v80igzNrJ21ReRpKEmKFBOoRLjO4plzSPYTJrQUBsUKaeUieldxbLWIKd8qRcNNUKhKyGGE0rJGley
        GTSioVYodp1RtFbr2Nq1oqFmKHiDVbgmG9iaNaOhdih6FWh6f6GsJfhpX3uDhjFA4XJRaQ3XFZY1tLI1
        xoCGsUDxE4yNCGUCW1ssaBgTsiFesTXFhIYxYZviE1tTTGgYE7YpPrE1xYSGMWGb4hNbU0xoGBO2KT6x
        NcWEhrHABqy3NyQA7yd47ks0jIEUb21ESNEeBDTUTgq3NkCDKA8CGmomRVvFaxLdQUBDraRgq3CNojoI
        aKgNSpVXBW0xStZO1jqczaINDbWQEuFF+BdY0ZrJmmXtqg8EGoYmpVXlxbjxNtUHAg1DkZKqslLYeJvK
        A4GGvkkpVTkpbrxN1YFAQ1+khKqMHDbepuJAoKFrGFouGfsSlOsHXezgZRjFunKNhq5gyJtgczU0KyNn
        Z+E1GMu6c4WGfQ1DjQQ5ys8AG76okTeVvAleziJKw76CIUaBnPipbHz9zsO70Mi67Ss0vFZY9M2wFeTH
        Ghuu6Dl5yflOmMS6vlY07C0sUt7TL/djZeP7nrzlbDfcxbrvLRrWC4saC9ugbLx7ciDIdRbuYXtRLxr2
        FBYxDt6Acj1g/+RA+ASa2d70FA2vBl/0VpBHqmXjdZADYSrbq6uhYXfwReTiDm+BPEJlCynC6bprmMn2
        rjs0tOGTyluw3oGy8XH4Ch5ke2mjYRd8kttA/i1aNj5OcsLNuWxvu9AQf0l+V78DyiVe4yd3De8BvTjV
        FQE+cAGcAPbJingdhyuuU3TZ/+ADWqD8Wz5d8iTcEnPPzc2fCCmcmbP4f/INfukMZl2bL1ftOlR9QJG+
        n+F68wB4zLixyMOzFw4A/KEffG/cUOThD7hODoAZRljk5cKP/2essMjHRjkA9llhkY+P5QCQR4TsxiJ9
        R+QAKE/p5uukHADshiIP7eUAyJwcAOUZv4zJAVBes5+x8hMgc+UxQObKAZC5hknzHumAziJL7Q2N9z50
        DDqLLB1uaGxueZvcUOTh+YbbZy+Zij+ct24o0neqqbl15IVXBN1x39InEbRbH1Ck61zTrMXLL70kTEyc
        +/DdOBC24SfCUdzYjqOjs6m5BeS/rR3QhruL0/jLHdYnK6LR8k/TrNYPsMczLu77wob/ADM/k0kNIp9C
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>